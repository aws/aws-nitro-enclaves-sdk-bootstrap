From 09dde1de079df387fe74a26873ea62712148a679 Mon Sep 17 00:00:00 2001
From: Leonard Foerster <foersleo@amazon.com>
Date: Wed, 29 May 2024 10:09:52 +0000
Subject: [PATCH] build: Allow to ad a directory prefix when unpacking images

When using custom init processes it can be beneficial to structure the
file system of your initramfs by unpacking the Docker image into a
specific directory. The custom init process could control the boot and
for example after doing some basic setup switch root into the
application directory and run the application based on parameters set in
the outer file system.

This can potentially also be used to structure the root fs when stacking
multiple initrd sections in an initramfs file.

Signed-off-by: Leonard Foerster <foersleo@amazon.com>
---
 docs/yaml.md                    | 7 +++++++
 src/cmd/linuxkit/moby/build.go  | 4 ++--
 src/cmd/linuxkit/moby/config.go | 4 ++++
 src/cmd/linuxkit/moby/schema.go | 1 +
 4 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/docs/yaml.md b/docs/yaml.md
index c04ad17e0..f7d0531c0 100644
--- a/docs/yaml.md
+++ b/docs/yaml.md
@@ -65,6 +65,13 @@ and set up basic filesystem mounts. in the case of a LinuxKit system. For ease o
 modification `runc` and `containerd` images, which just contain these programs are added here
 rather than bundled into the `init` container.
 
+## `prefix`
+
+The `prefix` is a string that modifies the directory the images from `init` are unpacked to. This
+can be used to employ a custom init process to setup and the basic kernel and facilities and then
+switches rootfs to the one pointed to by the Docker image. It further allows to structure the root
+file system when using multiple initrd assembling a bigger rootfs.
+
 ## `onboot`
 
 The `onboot` section is a list of images. These images are run before any other
diff --git a/src/cmd/linuxkit/moby/build.go b/src/cmd/linuxkit/moby/build.go
index 600f5518a..a1e4d283d 100644
--- a/src/cmd/linuxkit/moby/build.go
+++ b/src/cmd/linuxkit/moby/build.go
@@ -154,7 +154,7 @@ func Build(m Moby, w io.Writer, opts BuildOpts) error {
 		// get kernel and initrd tarball and ucode cpio archive from container
 		log.Infof("Extract kernel image: %s", m.Kernel.ref)
 		kf := newKernelFilter(iw, m.Kernel.Cmdline, m.Kernel.Binary, m.Kernel.Tar, m.Kernel.UCode, opts.DecompressKernel)
-		err := ImageTar(m.Kernel.ref, "", kf, "", opts)
+		err := ImageTar(m.Kernel.ref, m.Prefix, kf, "", opts)
 		if err != nil {
 			return fmt.Errorf("Failed to extract kernel image and tarball: %v", err)
 		}
@@ -171,7 +171,7 @@ func Build(m Moby, w io.Writer, opts BuildOpts) error {
 	apkTar := newAPKTarWriter(iw)
 	for _, ii := range m.initRefs {
 		log.Infof("Process init image: %s", ii)
-		err := ImageTar(ii, "", apkTar, resolvconfSymlink, opts)
+		err := ImageTar(ii, m.Prefix, apkTar, resolvconfSymlink, opts)
 		if err != nil {
 			return fmt.Errorf("failed to build init tarball from %s: %v", ii, err)
 		}
diff --git a/src/cmd/linuxkit/moby/config.go b/src/cmd/linuxkit/moby/config.go
index ae5cb0268..37e1d0518 100644
--- a/src/cmd/linuxkit/moby/config.go
+++ b/src/cmd/linuxkit/moby/config.go
@@ -22,6 +22,7 @@ import (
 type Moby struct {
 	Kernel     KernelConfig `kernel:"cmdline,omitempty" json:"kernel,omitempty"`
 	Init       []string     `init:"cmdline" json:"init"`
+	Prefix     string       `yaml:"prefix" json:"prefix"`
 	Onboot     []*Image     `yaml:"onboot" json:"onboot"`
 	Onshutdown []*Image     `yaml:"onshutdown" json:"onshutdown"`
 	Services   []*Image     `yaml:"services" json:"services"`
@@ -312,6 +313,9 @@ func AppendConfig(m0, m1 Moby) (Moby, error) {
 	if m1.Kernel.ref != nil {
 		moby.Kernel.ref = m1.Kernel.ref
 	}
+	if m1.Prefix != "" {
+		moby.Prefix = m1.Prefix
+	}
 	moby.Init = append(moby.Init, m1.Init...)
 	moby.Onboot = append(moby.Onboot, m1.Onboot...)
 	moby.Onshutdown = append(moby.Onshutdown, m1.Onshutdown...)
diff --git a/src/cmd/linuxkit/moby/schema.go b/src/cmd/linuxkit/moby/schema.go
index b01cfc1cc..3bb76aad8 100644
--- a/src/cmd/linuxkit/moby/schema.go
+++ b/src/cmd/linuxkit/moby/schema.go
@@ -321,6 +321,7 @@ var schema = `
   "properties": {
     "kernel": { "$ref": "#/definitions/kernel" },
     "init": { "$ref": "#/definitions/strings" },
+    "prefix": { "type": "string" },
     "onboot": { "$ref": "#/definitions/images" },
     "onshutdown": { "$ref": "#/definitions/images" },
     "services": { "$ref": "#/definitions/images" },
-- 
2.40.1

