From 2b1bf225888c041fffc8495d2a6fb0bc63bb9acc Mon Sep 17 00:00:00 2001
From: Eugene Koira <eugkoira@amazon.com>
Date: Mon, 21 Feb 2022 14:25:00 +0000
Subject: [PATCH 1/3] Add prefix build option

The initrd image can now be generated with a prefix path to the root
filesystem of the docker image, using the '-prefix' option.

Signed-off-by: Eugene Koira <eugkoira@amazon.com>
---
 src/cmd/linuxkit/build.go      | 3 ++-
 src/cmd/linuxkit/moby/build.go | 4 ++--
 src/cmd/linuxkit/moby/opts.go  | 1 +
 3 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/cmd/linuxkit/build.go b/src/cmd/linuxkit/build.go
index 88f3573ba..a9abb8ed2 100644
--- a/src/cmd/linuxkit/build.go
+++ b/src/cmd/linuxkit/build.go
@@ -54,6 +54,7 @@ func build(args []string) {
 	buildCacheDir := buildCmd.String("cache", defaultLinuxkitCache(), "Directory for caching and finding cached image")
 	buildCmd.Var(&buildFormats, "format", "Formats to create [ "+strings.Join(outputTypes, " ")+" ]")
 	buildArch := buildCmd.String("arch", runtime.GOARCH, "target architecture for which to build")
+	buildPrefix := buildCmd.String("prefix", "", "Add a prefix to the root filesystem of the image")
 
 	if err := buildCmd.Parse(args); err != nil {
 		log.Fatal("Unable to parse args")
@@ -204,7 +205,7 @@ func build(args []string) {
 	if moby.Streamable(buildFormats[0]) {
 		tp = buildFormats[0]
 	}
-	err = moby.Build(m, w, moby.BuildOpts{Pull: *buildPull, BuilderType: tp, DecompressKernel: *buildDecompressKernel, CacheDir: cacheDir, DockerCache: *buildDocker, Arch: *buildArch})
+	err = moby.Build(m, w, moby.BuildOpts{Pull: *buildPull, BuilderType: tp, DecompressKernel: *buildDecompressKernel, CacheDir: cacheDir, DockerCache: *buildDocker, Arch: *buildArch, Prefix: *buildPrefix})
 	if err != nil {
 		log.Fatalf("%v", err)
 	}
diff --git a/src/cmd/linuxkit/moby/build.go b/src/cmd/linuxkit/moby/build.go
index af7f3de7e..9adae1e53 100644
--- a/src/cmd/linuxkit/moby/build.go
+++ b/src/cmd/linuxkit/moby/build.go
@@ -154,7 +154,7 @@ func Build(m Moby, w io.Writer, opts BuildOpts) error {
 		// get kernel and initrd tarball and ucode cpio archive from container
 		log.Infof("Extract kernel image: %s", m.Kernel.ref)
 		kf := newKernelFilter(iw, m.Kernel.Cmdline, m.Kernel.Binary, m.Kernel.Tar, m.Kernel.UCode, opts.DecompressKernel)
-		err := ImageTar(m.Kernel.ref, "", kf, "", opts)
+		err := ImageTar(m.Kernel.ref, opts.Prefix, kf, "", opts)
 		if err != nil {
 			return fmt.Errorf("Failed to extract kernel image and tarball: %v", err)
 		}
@@ -170,7 +170,7 @@ func Build(m Moby, w io.Writer, opts BuildOpts) error {
 	}
 	for _, ii := range m.initRefs {
 		log.Infof("Process init image: %s", ii)
-		err := ImageTar(ii, "", iw, resolvconfSymlink, opts)
+		err := ImageTar(ii, opts.Prefix, iw, resolvconfSymlink, opts)
 		if err != nil {
 			return fmt.Errorf("Failed to build init tarball from %s: %v", ii, err)
 		}
diff --git a/src/cmd/linuxkit/moby/opts.go b/src/cmd/linuxkit/moby/opts.go
index 6f561689b..faab08b91 100644
--- a/src/cmd/linuxkit/moby/opts.go
+++ b/src/cmd/linuxkit/moby/opts.go
@@ -8,4 +8,5 @@ type BuildOpts struct {
 	CacheDir         string
 	DockerCache      bool
 	Arch             string
+	Prefix           string
 }
-- 
2.40.1

